'use strict';
angular.module('login', [
  'chat.common.services',
  'login.controller',
  'login.service',
  'login.route',
])
;

angular.module('login.service', [])

  /**
   * 用户全局引用
   */
  .service("UserService", function (CacheFactory, $rootScope) {
    var userinfo = null;
    var userservive = {
      getUserinfo: function () {
        if (userinfo == null) {
          var mockdata = {
            "_id": "5812ebdf4c0b0e79324f6cb1", "nickname": "yipeng", "username": "py",
            "password": "123", "headimg": "", "EMail": "yipeng.info@gmail.com",
          };
          userinfo = mockdata;
        }
        return userinfo;
      },
      setUserinfo: function (val) {
        userinfo = val;
        return;
      }
    }
    return userservive;
  })

  .factory('LogoutService', ['$state', '$ionicHistory',
    function ($state, $ionicHistory) {
      var _logout = function () {
        $ionicHistory.clearHistory();
        $state.go('tab.login');
      };
      return {
        logout: _logout,
      }
    }]);

/**
 * 10-29
 */
'use strict';
angular.module('login.route', [])
  .config(['$stateProvider', function ($stateProvider) {
    $stateProvider
      .state('login', {
        url: '/login',
        templateUrl: 'module/login/tpl/login.html',
        controller: 'LoginController',
      })
      .state('register', {
        url: '/register',
        templateUrl: 'module/login/tpl/register.html',
        controller: 'RegisterController',
      })
  }])
  ;

angular.module('login.controller', [])
  .controller('LoginController', LoginController)
  .controller('RegisterController', RegisterController)

function LoginController($scope, $rootScope, $ionicLoading, $state,
  LOGIN_URL, HttpPromiseService, UserService,ServerTokenService) {
  $scope.submitting = false;
  $scope.user = {};
  $scope.validateOptions = {
    blurTrig: false,
    showError: false,
    removeError: false
  };

  $scope.login = function () {
    var params = {
      username: $scope.user.username,
      password: $scope.user.password
    };
    HttpPromiseService.getData(LOGIN_URL, params).then(function (data) {
      console.log(data);
      if (data.state = 1) {
        UserService.setUserinfo(data.user);
        var token = data.token;

        ServerTokenService.setToken(token);
        $state.go('tab.chat');
      } else {
        alert("登录失败");
      }
    });
  };
}

LoginController.$inject = ['$scope', '$rootScope', '$ionicLoading',
  '$state', 'LOGIN_URL', 'HttpPromiseService', 'UserService','ServerTokenService'];

function RegisterController($scope, $rootScope, $ionicBackdrop, $ionicHistory,
  REGISTER_URL, HttpPromiseService, $state) {
  $scope.submitting = false;
  $scope.user = {};
  $scope.validateOptions = {
    blurTrig: false,
    showError: false,
    removeError: false
  };

  $scope.register = function () {
    $scope.submitting = true;
    var params = {
      username: $scope.user.username,
      password: $scope.user.password,
      nickname: $scope.user.username
    };
    HttpPromiseService.getData(REGISTER_URL, params).then(function (data) {
      console.log(data);
      if (data.state = 1) {
        alert("注册成功！");
        $state.go('login');
      } else {
        alert("注册失败");
      }
    });
  };

  $scope.goBack = function () {
    $ionicHistory.goBack(-1);
  }
}
RegisterController.$inject = ['$scope', '$rootScope', '$ionicBackdrop',
  '$ionicHistory', 'REGISTER_URL', 'HttpPromiseService', '$state'];
